#define ZMK_MOUSE_DEFAULT_SCRL_VAL 35 // 10

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        flash_macro: flash_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <30>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 8>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 22>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <29 30>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <34 35>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 7>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <18 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DVRK {
            bindings = <
&kp TAB    &kp SEMI      &kp COMMA   &kp DOT          &kp P         &kp Y               &kp UP_ARROW     &kp F         &kp G         &kp C            &kp R       &kp L        &kp BSPC
&kp RCTRL  &hm LSHIFT A  &hm LALT O  &hm LEFT_GUI E   &hm LCTRL U   &kp I               &kp DOWN_ARROW   &kp D         &hm RCTRL H   &hm RIGHT_GUI T  &hm RALT N  &hm RSHFT S  &kp RET
&kp LSHFT  &kp SQT       &kp Q       &kp J            &kp K         &kp X               &kp LEFT_ARROW   &kp B         &kp M         &kp W            &kp V       &kp Z        &kp ESCAPE
                         &to 5       &ltq 1 LEFT_GUI  &ltq 2 SPACE  &ltq 3 BACKSPACE    &kp RIGHT_ARROW  &ltq 2 ENTER  &ltq 3 SPACE  &ltq 6 DELETE
                                                                                        &to 6
            >;

            label = "drvk";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Navi {
            bindings = <
&trans  &trans        &trans        &kp HOME          &kp PAGE_UP     &kp C_VOLUME_UP      &trans  &kp C_BRIGHTNESS_INC   &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp C_VOLUME_DOWN    &trans  &kp C_BRIGHTNESS_DEC   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans        &trans        &kp END           &kp PAGE_DOWN   &kp K_MUTE           &trans  &kp C_BRIGHTNESS_AUTO  &trans          &trans          &trans           &trans  &trans
                      &trans        &trans            &trans          &trans               &trans  &trans                 &trans          &trans
                                                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
            label = "Navi";
        };

        Symbol {
            bindings = <
&trans  &kp TILDE        &kp CARET  &trans    &kp QUESTION  &kp PIPE    &trans  &kp AT     &kp PERCENT  &trans    &kp DOLLAR  &kp SLASH       &trans
&trans  &kp PLUS         &kp LBKT   &kp LBRC  &kp LPAR      &kp AMPS    &trans  &kp EQUAL  &kp RPAR     &kp RBRC  &kp RBKT    &kp MINUS       &trans
&trans  &kp EXCLAMATION  &trans     &trans    &trans        &kp HASH    &trans  &kp GRAVE  &trans       &trans    &trans      &kp UNDERSCORE  &trans
                         &trans     &trans    &trans        &trans      &trans  &trans     &trans       &trans
                                                                        &trans
            >;

            label = "Symbol";
        };

        NUM {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &kp LEFT_ARROW  &kp UP        &kp DOWN      &kp RIGHT     &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans          &trans        &trans        &trans        &trans        &trans
                      &trans        &trans        &trans        &trans          &trans  &trans          &trans        &trans
                                                                                &trans
            >;

            label = "num";
        };

        Flash {
            bindings = <
&flash_macro  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&to 7         &to 0   &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
                      &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans
                                                        &trans
            >;

            label = "Flash";
        };

        Rgb {
            bindings = <
&ext_power EP_TOG  &trans  &trans  &trans  &trans           &rgb_ug RGB_SPI    &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &trans           &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR    &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_SAI  &trans           &trans           &trans  &trans  &trans  &trans
                           &to 0   &trans  &trans           &trans             &rgb_ug RGB_SAD  &trans           &trans           &trans
                                                                               &rgb_ug RGB_TOG
            >;

            label = "Rgb";
            sensor-bindings = <&rgb_encoder &scroll_encoder>;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_UP     &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_DOWN   &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_LEFT   &trans     &trans     &trans  &trans  &trans  &trans
                &trans  &trans  &mkp LCLK  &mkp RCLK    &mmv MOVE_RIGHT  &mkp LCLK  &mkp RCLK  &trans
                                                        &to 0
            >;

            label = "Mouse";
            sensor-bindings = <&scroll_encoder>;
        };

        QWERTY {
            label = "Qwerty";
            bindings = <
&trans  &kp Q         &kp W           &kp E       &kp R        &kp T     &kp UP_ARROW     &kp Y   &kp U        &kp I                &kp O                    &kp P                 &trans
&trans  &hm LSHIFT A  &hm LEFT_ALT S  &hm LGUI D  &hm LCTRL F  &kp G     &kp DOWN_ARROW   &kp H   &hm RCTRL J  &hm RGUI K           &hm RIGHT_ALT L          &hm RSHIFT SEMICOLON  &trans
&trans  &kp Z         &kp X           &kp C       &kp V        &kp B     &kp LEFT_ARROW   &kp N   &kp M        &as LESS_THAN COMMA  &as GREATER_THAN PERIOD  &as QUESTION SLASH    &trans
                      &to 5           &trans      &trans       &trans    &kp RIGHT_ARROW  &trans  &trans       &trans
                                                                         &to 6
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };
};
